<?php

/**
 * Generated by PHPUnit_SkeletonGenerator on 2014-05-09 at 16:58:19.
 */
class PiggyControllerTest extends TestCase
{
    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    public function setUp()
    {
        parent::setUp();
        $user = User::where('username', 'admin')->first();
        $this->be($user);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        $this->deleteSetting();
    }

    /**
     * @covers PiggyController::index
     * @todo   Implement testIndex().
     */
    public function testIndex()
    {
        $this->createSetting();
        // Remove the following lines when you implement this test.
        $response = $this->action('GET', 'PiggyController@index');
        $this->assertResponseOk();
    }

    /**
     * @covers PiggyController::add
     * @todo   Implement testAdd().
     */
    public function testAdd()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PiggyController::postAdd
     * @todo   Implement testPostAdd().
     */
    public function testPostAdd()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PiggyController::delete
     * @todo   Implement testDelete().
     */
    public function testDelete()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PiggyController::postDelete
     * @todo   Implement testPostDelete().
     */
    public function testPostDelete()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PiggyController::selectAccount
     * @todo   Implement testSelectAccount().
     */
    public function testSelectAccount()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PiggyController::postSelectAccount
     * @todo   Implement testPostSelectAccount().
     */
    public function testPostSelectAccount()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PiggyController::edit
     * @todo   Implement testEdit().
     */
    public function testEdit()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PiggyController::postEdit
     * @todo   Implement testPostEdit().
     */
    public function testPostEdit()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PiggyController::updateAmount
     * @todo   Implement testUpdateAmount().
     */
    public function testUpdateAmount()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PiggyController::postUpdateAmount
     * @todo   Implement testPostUpdateAmount().
     */
    public function testPostUpdateAmount()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PiggyController::dropPiggy
     * @todo   Implement testDropPiggy().
     */
    public function testDropPiggy()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PiggyController::index
     */
    public function testIndexNoSetting()
    {
        $this->action('GET', 'PiggyController@index');
        $this->assertResponseStatus(302);
        $this->assertRedirectedToRoute('piggyselect');
    }
    /**
     * @covers PiggyController::add
     */
    public function testAddNoSetting()
    {
        $this->action('GET', 'PiggyController@add');
        $this->assertResponseStatus(302);
        $this->assertRedirectedToRoute('piggyselect');
    }
    /**
     * @covers PiggyController::postAdd
     */
    public function testPostAddNoSetting()
    {
        $this->action('POST', 'PiggyController@postAdd');
        $this->assertResponseStatus(302);
        $this->assertRedirectedToRoute('piggyselect');
    }
    /**
     * @covers PiggyController::delete
     */
    public function testDeleteNoSetting()
    {
        $piggy = Piggybank::first();
        $this->action('GET', 'PiggyController@delete',$piggy->id);
        $this->assertResponseStatus(302);
        $this->assertRedirectedToRoute('piggyselect');
    }
    /**
     * @covers PiggyController::postDelete
     */
    public function testPostDeleteNoSetting()
    {
        $piggy = Piggybank::first();
        $this->action('POST', 'PiggyController@postDelete',$piggy->id);
        $this->assertResponseStatus(302);
        $this->assertRedirectedToRoute('piggyselect');
    }
    /**
     * @covers PiggyController::edit
     */
    public function testEditNoSetting()
    {
        $piggy = Piggybank::first();
        $this->action('GET', 'PiggyController@edit',$piggy->id);
        $this->assertResponseStatus(302);
        $this->assertRedirectedToRoute('piggyselect');
    }
    /**
     * @covers PiggyController::postEdit
     */
    public function testPostEditNoSetting()
    {
        $piggy = Piggybank::first();
        $this->action('POST', 'PiggyController@postEdit',$piggy->id);
        $this->assertResponseStatus(302);
        $this->assertRedirectedToRoute('piggyselect');
    }
    /**
     * @covers PiggyController::updateAmount
     */
    public function testUpdateAmountNoSetting()
    {
        $piggy = Piggybank::first();
        $this->action('GET', 'PiggyController@updateAmount',$piggy->id);
        $this->assertResponseStatus(302);
        $this->assertRedirectedToRoute('piggyselect');
    }

    /**
     * @covers PiggyController::postUpdateAmount
     */
    public function testPostUpdateAmountNoSetting()
    {
        $piggy = Piggybank::first();
        $this->action('POST', 'PiggyController@postUpdateAmount',$piggy->id);
        $this->assertResponseStatus(302);
        $this->assertRedirectedToRoute('piggyselect');
    }

    /**
     * @covers PiggyController::dropPiggy
     */
    public function testDropPiggyNoSetting()
    {
        $piggy = Piggybank::first();
        $this->action('POST', 'PiggyController@dropPiggy',$piggy->id);
        $this->assertResponseStatus(302);
        $this->assertRedirectedToRoute('piggyselect');
    }



    protected function createSetting()
    {

        parent::setUp();
        $user = User::where('username', 'admin')->first();
        $account = Account::first();
        $this->be($user);

        Setting::create(
            [
                'user_id'    => $user->id,
                'account_id' => null,
                'type'       => 'int',
                'name'       => 'piggyAccount',
                'date'       => null,
                'value'      => $account->id
            ]
        );
    }

    protected function deleteSetting()
    {
        $setting = Setting::where('name', 'piggyAccount')->first();
        if ($setting) {
            $setting->delete();
        }
    }
}
